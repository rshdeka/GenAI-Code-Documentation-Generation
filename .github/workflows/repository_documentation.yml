name: Automate Documentation

# The workflow is triggered on push and pull_request events for the main branch
on:
  push:  
    branches:  
      - dev
  pull_request:  
    branches:  
      - dev
  workflow_dispatch: 

env:
  AZURE_OPENAI_KEY: ${{ secrets.AZURE_OPENAI_KEY }}
  AZURE_OPENAI_API_BASE: ${{ secrets.AZURE_OPENAI_API_BASE }}
  AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:  
  auto_documentation:
    #runs-on: { group: ubuntu-uhg }-1
    runs-on: { group: ubuntu-uhg }  

    steps: 
      # Checks out the repository under $GITHUB_WORKSPACE 
      - name: Checkout code
        uses: actions/checkout@v2
        with:  
          ref: ${{ github.head_ref }}   

      # Sets up a Python environment with the specified version
      - name: Set up Python
        uses: actions/setup-python@v2  
        with:  
          python-version: 3.9
  
      # Installs the necessary Python dependencies
      - name: Install dependencies  
        run: |  
          python -m pip install --upgrade pip
          pip install -r requirements.txt  
          pip install openai
          pip install requests
          pip install PyGithub

      # List files in the GitHub Actions environment  
      - name: List files  
        run: |  
          echo "Listing files in the current directory:"  
          ls -la
  
      # Generates the documentation using the ChatGPT API
      - name: Generate documentation
        # Run if the event is a PR to "dev" or the PR is closed and merged to "dev"
        if: (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'dev') || (github.event_name == 'push' && github.ref == 'refs/heads/dev' && contains(github.event.head_commit.message, 'Merge pull request'))
        run: |
          export EVENT_TYPE="${{ github.event_name }}" 
          export GITHUB_REF="${{ github.ref }}"
          export AZURE_OPENAI_KEY="${{ env.AZURE_OPENAI_KEY }}"  
          export AZURE_OPENAI_API_BASE="${{ env.AZURE_OPENAI_API_BASE }}"  
          export AZURE_OPENAI_API_VERSION="${{ env.AZURE_OPENAI_API_VERSION }}"  
          export GITHUB_TOKEN="${{ env.GITHUB_TOKEN }}"  
          export PR_NUMBER="${{ github.event.number }}"  
          export REPO="${{ github.repository }}"  
          python generate_documentation.py

      # Commits the generated documentation to the repository
      - name: Commit documentation changes  
        run: |  
          git config --global user.email "github-action-bot@example.com"
          git config --global user.name "GitHub Action Bot"  
          git add documentation.md  
          git commit -m "Update documentation using ChatGPT" || echo "No changes to commit"  
          git push origin ${{ github.head_ref }} 
